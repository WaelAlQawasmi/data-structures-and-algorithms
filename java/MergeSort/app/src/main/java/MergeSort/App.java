/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package MergeSort;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {

        int arr[] = {2,3,5,7,13,11};
        System.out.println("Input->"+Arrays.toString( arr));
        Mergesort(arr);




    }


    public static void Mergesort(int[] arr) {


        int arrLength = arr.length;

        if (arrLength > 1) {
            int mid = arrLength / 2;
            int L[] = new int[mid];
            int R[] = new int[arrLength - mid];

// to put the first half of arr to L
            for (int i = 0; i < L.length; ++i) {
                L[i] = arr[i];
            }
  // to put the Second half of arr to L
            for (int j = 0; j <arrLength-mid; ++j) {
                R[j] = arr[mid +j];
            }
// to divide L & R until arrive to one item array
            System.out.print("   ARR"+Arrays.toString(arr));
            Mergesort(L);
            System.out.print("  L"+Arrays.toString(L));
            Mergesort(R);
            System.out.println("  R"+Arrays.toString(R));
 // to marge L & R In arr
            Merge(L, R, arr);
        }
    }


    public static void Merge(int[] L, int[] R, int[] arr) {
        int lIndex = 0;
        int rIndex = 0;
        int arrIndex = 0;


        while (lIndex < L.length && rIndex < R.length) {
            if (L[lIndex] <= R[rIndex]) {
                arr[arrIndex] = L[lIndex++];

            } else {
                arr[arrIndex] = R[rIndex++];

            }
            arrIndex++;

        }
        if (lIndex == L.length) {
            while (rIndex < R.length) {
                arr[arrIndex++] = R[rIndex++];

            }
        }

        if (rIndex == R.length) {
            while (lIndex < L.length) {
                arr[arrIndex++] = L[lIndex++];

            }


        }
        System.out.println("   ARRMARGIED"+Arrays.toString(arr));


    }


}
