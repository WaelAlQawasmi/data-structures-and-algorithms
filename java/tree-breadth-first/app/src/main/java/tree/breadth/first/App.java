/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package tree.breadth.first;

import java.util.ArrayList;

public class App {
    public String getGreeting() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        BinaryTree binaryTree = new BinaryTree();

        binaryTree.setRoot(new BTNode("2"));

        binaryTree.getRoot().setLeft(new BTNode("7"));

        binaryTree.getRoot().setRight(new BTNode("5"));

        binaryTree.getRoot().getLeft().setLeft(new BTNode("2"));
        binaryTree.getRoot().getLeft().setRight(new BTNode("6"));
//System.out.println("0000000000000");
        binaryTree.getRoot().getRight().setRight(new BTNode("9"));
        binaryTree.getRoot().getRight().getRight().setLeft(new BTNode("4"));

        binaryTree.getRoot().getLeft().getRight().setRight(new BTNode("11"));
        binaryTree.getRoot().getLeft().getRight().setLeft(new BTNode("5"));

       System.out.println(breadth_first(binaryTree));

    }


    private static ArrayList<String> breadth=new ArrayList<>();

    public static ArrayList<String> breadth_first(BinaryTree binaryTree){
        Queue<BTNode> queue=new Queue<>();
        Node newNode= new Node(binaryTree.getRoot());
        queue.enqueue(newNode);
        //System.out.println("............"+queue.dequeue().getData());
        return   printLevelOrder(queue);
    }


    public static ArrayList<String> printLevelOrder(Queue<BTNode> queue)
    {
        if(!queue.isEmpty()){
            BTNode node=queue.dequeue();
           // System.out.println(node.getData()+"->");
breadth.add(node.getData());

            if(node.getLeft()!=null){
                Node newNode= new Node(node.getLeft());
                queue.enqueue(newNode);
            }
            if (node.getRight()!=null){
                Node newNode= new Node(node.getRight());
                queue.enqueue(newNode);
            }
            printLevelOrder(queue);
        }
        return breadth;
    }

}
