/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package graph.breadth.first;

import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import java.util.Arrays;
import java.util.List;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {
    @Test void appHasAGreeting() {
        App classUnderTest = new App();
        assertNotNull(classUnderTest.getGreeting(), "app should have a greeting");
    }
@DisplayName("TEST1")
    @Test void test1() {
        Graph graph=new Graph();
        graph.addNode("Pandora");
        graph.addNode("Arendelle");
        graph.addNode("Metroville");
        graph.addNode("Monstroplolis");
        graph.addNode("Narnia");
        graph.addNode("Naboo");

    graph.addEdge(new Vertex("Pandora"),new Vertex("Arendelle"));
    graph.addEdge(new Vertex("Metroville"),new Vertex("Arendelle"));
    graph.addEdge(new Vertex("Monstroplolis"),new Vertex("Arendelle"));
    graph.addEdge(new Vertex("Monstroplolis"),new Vertex("Metroville"));
    graph.addEdge(new Vertex("Metroville"),new Vertex("Narnia"));

    graph.addEdge(new Vertex("Naboo"),new Vertex("Metroville"));
    graph.addEdge(new Vertex("Naboo"),new Vertex("Monstroplolis"));
    graph.addEdge(new Vertex("Narnia"),new Vertex("Naboo"));
        String[]expectedArraay={"Pandora", "Arendelle", "Metroville", "Monstroplolis", "Narnia", "Naboo"};



assertEquals(Arrays.toString(expectedArraay),graph.breadthFirst(new Vertex("Pandora")).toString());
    }



    @Test void test2() {
        Graph graph=new Graph();
        graph.addNode("one");
        graph.addNode("two");
        graph.addNode("three");
        graph.addNode("fore");
        graph.addNode("5");
        graph.addNode("6");

        graph.addEdge(new Vertex("one"),new Vertex("two"));
        graph.addEdge(new Vertex("two"),new Vertex("three"));
        graph.addEdge(new Vertex("three"),new Vertex("fore"));
        graph.addEdge(new Vertex("fore"),new Vertex("5"));
        graph.addEdge(new Vertex("5"),new Vertex("6"));


        String[]expectedArraay={"one", "two", "three", "fore", "5" , "6"};



        assertEquals(Arrays.toString(expectedArraay),graph.breadthFirst(new Vertex("one")).toString());
    }


    @Test void test3() {
        Graph graph=new Graph();
        graph.addNode("one");
        graph.addNode("two");
        graph.addNode("three");
        graph.addNode("fore");
        graph.addNode("5");
        graph.addNode("6");

        graph.addEdge(new Vertex("one"),new Vertex("two"));
        graph.addEdge(new Vertex("two"),new Vertex("three"));
        graph.addEdge(new Vertex("three"),new Vertex("fore"));
        graph.addEdge(new Vertex("fore"),new Vertex("5"));
        graph.addEdge(new Vertex("fore"),new Vertex("6"));
        graph.addEdge(new Vertex("6"),new Vertex("one"));

        String[]expectedArraay={"one", "two", "6", "three", "fore", "5"};



        assertEquals(Arrays.toString(expectedArraay),graph.breadthFirst(new Vertex("one")).toString());
    }
}
